using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Algoritm1
{
    class Program
    {
        static void Main(string[] args)
        {
            //ВХОДНЫЕ ДАННЫЕ
            int[] C = new int[1]; // Тип передающего средства. ОДЗ: 0;1;
            int[,] U = new int[1,4]; // Уникальные номера передающих средств. ОДЗ: [0, 9]
            int N; // Количество передающих средств. ОДЗ: [1, 15]
            int[] M = new int[5]; // Массив, определяющий количество граничных точек ОДЗ: [2,6]
            int Zi; //Циклограмма работы канала работоспособности  j-ой ПРД-А. ОДЗ: [0, 9]
            int φ1; // Угловой градус широты  j-ой точки, описывающей район расположения  i-го передающего средства. ОДЗ [-90;90]
            int φ2; // Угловая минута широты  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0;60]
            int φ3; // Десятая часть угловой минуты широты  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0, 9]
            int λ1; // Угловой градус долготы  j-ой точки, описывающей район расположения   i-го передающего средства; ОДЗ: [0, 180]
            int λ2; // Угловая минута долготы  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ: [0, 60]
            int λ3; // Десятая часть угловой минуты долготы  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ: [0, 9]
            int ys; // Год начала функционирования  i-го передающего средства в районе. ОДЗ: [22; 99]
            int mhs; //Месяц начала функционирования  i-го передающего средства в районе. ОДЗ: [0; 12]
            int ds; // День начала функционирования  i-го передающего средства в районе. ОДЗ: [1;31]
            int hs; // Час начала функционирования  i-го передающего средства в районе. ОДЗ: [0;23]
            int mns; //Минута начала функционирования  i-го передающего средства в районе. ОДЗ: [0; 59]
            int ye; //Год окончания функционирования  i-го передающего средства в районе. ОДЗ: [22; 99]
            int mhe; // Месяц окончания функционирования  i-го передающего средства в районе. ОДЗ: [0; 12]
            int de; // День окончания функционирования  i-го передающего средства в районе. ОДЗ: [1;31]
            int he; // Час окончания функционирования  i-го передающего средства в районе. ОДЗ: [0;23]
            int mne; // Минута окончания функционирования  i-го передающего средства в районе. ОДЗ: [0; 59]
            int l; // Уровень помехозащиты сигналов  i-го передающего средства. ОДЗ: [0, 1]
            int tp; // Тип  i-го передающего средства. ОДЗ: [0, 1]

            //ВЫХОДНЫЙЕ ДАННЫЕ
            int[,] W = new int[1,6]; //Массив соответствий уникальных номеров порядковым номерам передающих средств. ОДЗ: [0, 15]
            double[] STA = new double[99]; //Пространственно-временные характеристики передающих средств. ОДЗ: [0, 99]
            double[] SH = new double[180]; //Пространственные характеристики передающих средств. ОДЗ: [0, 180]
            int[] T = new int[180]; //Временные характеристики передающих средств. ОДЗ: [0, 180]
            int[] L = new int[3]; //Уровень помехозащиты передающих средств. ОДЗ: [0, 2]
            int[] TP = new int[1]; //Типы передающих средств. ОДЗ: [0, 1]
            int[] Z = new int[9]; //Циклограммы работы канала работоспособности. ОДЗ: [0, 9]

            int[] I = new int[M.Length-1]; //массив порядковых номеров передающих средств.
            double[] Φ = new double[3]; //массив Угловых: градусов, минут, десятой частью угловой минуты широты.
            double[] Λ = new double[3]; //массив Угловых: градусов, минут, десятой частью угловой минуты Долготы.
            double[] K = new double[2];

            //заполнение массива M
            for (int i = 0; i < M.Length; i++){
                Console.Write("Введите колличество граничных точек:");
                int mt = int.Parse(Console.ReadLine());
                M[i] = mt;}


            //заполнение массива Z
            for (int i = 0; i < Z.Length; i++){
                Console.Write("Введите Циклограмму работы канала работоспособности  j-ой ПРД-А:");
                Zi = int.Parse(Console.ReadLine()); //Циклограмма работы канала работоспособности  j-ой ПРД-А. ОДЗ: [0, 9]
                Z[i] = Zi;}

            //заполнение массива L
            for (int i = 0; i < L.Length; i++)
            {
                Console.Write("Введите Уровень помехозащиты сигналов i-го передающего средства:");
                l = int.Parse(Console.ReadLine()); //Уровень помехозащиты сигналов i-го передающего средства. ОДЗ:[0, 1]
                L[i] = l;
            }
            //заполнение массива TP
            for (int i = 0; i < TP.Length; i++)
            {
                Console.Write("Введите Тип  i-го передающего средства");
                tp = int.Parse(Console.ReadLine()); //Тип  i-го передающего средства. ОДЗ: [0, 1]
                TP[i] = tp;
            }

            for (int i = 0; i < C.Length; i++)
            {
                Console.Write("Введите Тип передающего средства");
                int c = int.Parse(Console.ReadLine()); // C[] - Тип передающего средства.
                C[i] = c;
            }

            for (int i = 0; i < U.Length; i++)
            {
                Console.Write("Введите Уникальные номера передающих средств" + i);

                for (int j = 0; j < 4; j++)
                {
                    Console.Write("."+ j);
                    int u = int.Parse(Console.ReadLine()); // U[] - Уникальные номера передающих средств. ОДЗ: [0, 9]
                    U[i,j] = u;
                }
                I[i] = i;
            }


            for (int i = 0; i < W.Length; i++)
            {
                Console.Write("Введите Уникальные номера передающих средств" + i);

                for (int j = 0; j < 5; j++)
                {
                    Console.Write("." + j);
                    int w = C[i] + U[i,j];
                    W[i,j] = w;
                }
                W[i,5] = I[i];
            }

            Console.WriteLine("Выбирете колличество совокупностей наборов координат граничных точек");
            int countI = int.Parse(Console.ReadLine());
            for (int i = 0; i < countI; i++)
            {
            Console.WriteLine("Выбирете колличество наборов координат граничных точек");
            int countJ = int.Parse(Console.ReadLine());
            double[] S = new double[countJ];
            
            for (int j = 0; j < countJ; j++)
            {
               Console.WriteLine("Угловой градус широты  j-ой точки, описывающей район расположения  i-го передающего средства.");
               φ1 = int.Parse(Console.ReadLine()); ; // Угловой градус широты  j-ой точки, описывающей район расположения  i-го передающего средства. ОДЗ [-90;90]
                φ2 = φ1 / 60; // Угловая минута широты  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0;60]
                φ3 = φ2 / 10; // Десятая часть угловой минуты широты  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0, 9]
                Φ[0] = φ1;
                Φ[1] = φ2;
                Φ[2] = φ3;

                Console.WriteLine("Угловой градус Долготы  j-ой точки, описывающей район расположения  i-го передающего средства.");
                λ1 = int.Parse(Console.ReadLine()); ; // Угловой градус долготы  j-ой точки, описывающей район расположения  i-го передающего средства. ОДЗ [-90;90]
                λ2 = λ1 / 60; // Угловая минута долготы  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0;60]
                λ3 = λ2 / 10; // Десятая часть угловой минуты долготы  j-ой точки, описывающей район расположения   i-го передающего средства. ОДЗ [0, 9]
                Λ[0] = λ1;
                Λ[1] = λ2;
                Λ[2] = λ3;

                K[0] = (Φ[0] + Φ[1] + Φ[2]);
                K[1] = (Λ[0] + Λ[1] + Λ[2]);
                    S[j] = K[0] + K[1];
            }
                for (int k = 0; k < S.Length; k++)
                {
                    SH[i] = SH[i] + S[k];
                }

                Console.WriteLine("Время начала");
                ys = int.Parse(Console.ReadLine());
                mhs = int.Parse(Console.ReadLine());
                ds = int.Parse(Console.ReadLine());
                hs = int.Parse(Console.ReadLine());
                mns = int.Parse(Console.ReadLine());
                int[] Ts = { ys, mhs, ds, hs, mns };

                Console.WriteLine("Время конца");
                ye = int.Parse(Console.ReadLine());
                mhe = int.Parse(Console.ReadLine());
                de = int.Parse(Console.ReadLine());
                he = int.Parse(Console.ReadLine());
                mne = int.Parse(Console.ReadLine());
                int[] Te = { ye, mhe, de, he, mne };


                T[0] = Ts[0] + Ts[1] + Ts[2] + Ts[3] + Ts[4];
                T[1] = Te[0] + Te[1] + Te[2] + Te[3] + Te[4];

                double[] ST = new double[2]; 
                ST[0] = T[0] + T[1];

                for (int k = 0; k < S.Length; k++)
                {
                    ST[1] = ST[1] + S[k];
                }

                STA[i] = ST[0] + ST[1];
            }

            


        }
    }
}
